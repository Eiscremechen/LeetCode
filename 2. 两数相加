/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* node = new ListNode(0);
        ListNode* temp = node;
        int carry = 0;
        while (l1 != nullptr || l2 != nullptr || carry != 0) {
            int val_l1 = l1 != nullptr ? l1->val : 0;
            int val_l2 = l2 != nullptr ? l2->val : 0;
            int sum = val_l1 + val_l2 + carry;
            carry = sum / 10;

            ListNode* sumNode = new ListNode(sum % 10);
            temp->next = sumNode;
            temp = sumNode;

            l1 = l1 != nullptr ? l1->next : nullptr;
            l2 = l2 != nullptr ? l2->next : nullptr;

        }
        return node->next;
    }
};
