class Solution {
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        DPS(candidates, target, 0);
        return res;
    }
private:
    vector<vector<int>> res;
    vector<int> path;
    void DPS(vector<int>& candidates, int target, int idx){
        if(idx == candidates.size()){
            return;
        }
        if(target == 0){
            res.emplace_back(path);
            return;
        }

        DPS(candidates, target, idx + 1);
        if(target - candidates[idx] >= 0){
            path.emplace_back(candidates[idx]);
            DPS(candidates, target - candidates[idx], idx);
            path.pop_back();
        }
    }
};
