/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        std::vector<std::vector<int>> res;
        if(root == nullptr){
            return res;
        }

        std::queue<TreeNode*> que;

        que.push(root);
        while(que.size() != 0){
            int level_size = que.size();
            res.push_back(std::vector<int>());
            for(int i = 0; i < level_size; i++){
                TreeNode* Node = que.front();
                que.pop();

                res.back().push_back(Node->val);
                if(Node->left != nullptr){
                    que.push(Node->left);
                }
                if(Node->right != nullptr){
                    que.push(Node->right);
                }
            }
        }

    return res;
    }
};
